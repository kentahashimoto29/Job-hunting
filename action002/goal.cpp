//========================================================
//
//ウインドウの生成等 (goal.cpp)
//Author 橋本賢太
//
//========================================================
#include "goal.h"
#include "manager.h"

int CGoal::m_nIdxTexture = 0;

//========================================================
//コンストラクタ
//========================================================
CGoal::CGoal()
{

}

//========================================================
//デストラクタ
//========================================================
CGoal::~CGoal()
{

}

//========================================================
//生成処理
//========================================================
CGoal *CGoal::Create()
{
	CGoal *pGoal;

	//2Dオブジェクトの生成
	pGoal = new CGoal();

	//初期化処理
	pGoal->Init();

	return pGoal;
}

//========================================================
//初期化処理
//========================================================
HRESULT CGoal::Init(void)
{
	CTexture *pTexture = CManager::GetInstance()->GetTexture();

	bool bTexture = false;

	for (int nCnt = 0; nCnt < TEXTURE_MAX; nCnt++)
	{
		if ("data\\TEXTURE\\Goal001.jpg" == pTexture->GetName(nCnt))
		{
			bTexture = true;
			break;
		}
	}

	if (bTexture == false)
	{
		m_nIdxTexture = pTexture->Regist("data\\TEXTURE\\Goal001.jpg");
	}

	CObject2D::BindTexture(m_nIdxTexture);

	CObject2D::Init();

	SetVtxResult();

	return S_OK;
}

//========================================================
//終了処理
//========================================================
void CGoal::Uninit(void)
{
	CObject2D::Uninit();
}

//========================================================
//更新処理
//========================================================
void CGoal::Update(void)
{

}

//========================================================
//描画処理
//========================================================
void CGoal::Draw(void)
{
	CObject2D::Draw();
}

//========================================================
//位置を返す
//========================================================
D3DXVECTOR3 CGoal::GetPos(void)
{
	return m_pos;
}